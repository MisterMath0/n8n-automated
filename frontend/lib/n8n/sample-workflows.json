{
  "gmail_to_slack": {
    "name": "Gmail to Slack Notification",
    "nodes": [
      {
        "parameters": {
          "authentication": "serviceAccount",
          "filters": {
            "includeSpamTrash": false
          },
          "simple": false,
          "options": {}
        },
        "id": "3c6b8c0e-7e4c-4a4d-b2c1-1a2b3c4d5e6f",
        "name": "Gmail Trigger",
        "type": "n8n-nodes-base.gmailTrigger",
        "typeVersion": 2,
        "position": [
          240,
          300
        ],
        "webhookId": "c4d5e6f7-8g9h-0i1j-2k3l-4m5n6o7p8q9r"
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict"
            },
            "conditions": [
              {
                "id": "12345678-90ab-cdef-1234-567890abcdef",
                "leftValue": "={{ $json.payload.subject }}",
                "rightValue": "urgent",
                "operator": {
                  "type": "string",
                  "operation": "contains",
                  "singleValue": true
                }
              }
            ],
            "combinator": "and"
          },
          "options": {}
        },
        "id": "7d8e9f0a-1b2c-3d4e-5f6g-7h8i9j0k1l2m",
        "name": "Check if Urgent",
        "type": "n8n-nodes-base.if",
        "typeVersion": 2,
        "position": [
          460,
          300
        ]
      },
      {
        "parameters": {
          "authentication": "oAuth2",
          "select": "channel",
          "channelId": {
            "__rl": true,
            "value": "C1234567890",
            "mode": "id"
          },
          "text": "ðŸš¨ Urgent Email Alert!\n\nFrom: {{ $('Gmail Trigger').item.json.payload.headers.from }}\nSubject: {{ $('Gmail Trigger').item.json.payload.subject }}\n\nSnippet: {{ $('Gmail Trigger').item.json.payload.snippet }}",
          "otherOptions": {}
        },
        "id": "9e0f1a2b-3c4d-5e6f-7g8h-9i0j1k2l3m4n",
        "name": "Send Slack Alert",
        "type": "n8n-nodes-base.slack",
        "typeVersion": 2.1,
        "position": [
          680,
          220
        ]
      },
      {
        "parameters": {
          "values": {
            "string": [
              {
                "name": "email_processed",
                "value": "true"
              },
              {
                "name": "processed_at",
                "value": "={{ new Date().toISOString() }}"
              }
            ]
          },
          "options": {}
        },
        "id": "5f6g7h8i-9j0k-1l2m-3n4o-5p6q7r8s9t0u",
        "name": "Mark Processed",
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          680,
          380
        ]
      }
    ],
    "pinData": {},
    "connections": {
      "Gmail Trigger": {
        "main": [
          [
            {
              "node": "Check if Urgent",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Check if Urgent": {
        "main": [
          [
            {
              "node": "Send Slack Alert",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Mark Processed",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "active": false,
    "settings": {
      "executionOrder": "v1"
    },
    "versionId": "12345678-90ab-cdef-1234-567890abcdef",
    "meta": {
      "templateCredsSetupCompleted": true,
      "instanceId": "1a2b3c4d5e6f7g8h9i0j1k2l3m4n5o6p"
    },
    "id": "98765432-10ab-cdef-9876-543210fedcba",
    "tags": []
  },
  "webhook_api_processing": {
    "name": "Webhook API Data Processing",
    "nodes": [
      {
        "parameters": {
          "httpMethod": "POST",
          "path": "webhook-data",
          "options": {}
        },
        "id": "a1b2c3d4-e5f6-7g8h-9i0j-k1l2m3n4o5p6",
        "name": "Webhook",
        "type": "n8n-nodes-base.webhook",
        "typeVersion": 2,
        "position": [
          200,
          300
        ],
        "webhookId": "webhook-abc123"
      },
      {
        "parameters": {
          "mode": "runOnceForEachItem",
          "jsCode": "// Process the incoming webhook data\nconst data = $input.item.json;\n\n// Extract relevant fields\nconst processedData = {\n  customer_id: data.customer?.id || 'unknown',\n  event_type: data.event || 'unknown',\n  timestamp: new Date().toISOString(),\n  processed: true,\n  original_data: data\n};\n\n// Validate required fields\nif (!data.customer?.email) {\n  throw new Error('Customer email is required');\n}\n\nreturn { json: processedData };"
        },
        "id": "b2c3d4e5-f6g7-8h9i-0j1k-l2m3n4o5p6q7",
        "name": "Process Data",
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          420,
          300
        ]
      },
      {
        "parameters": {
          "operation": "create",
          "table": "customer_events",
          "columns": {
            "mappingMode": "defineBelow",
            "value": {
              "customer_id": "={{ $json.customer_id }}",
              "event_type": "={{ $json.event_type }}",
              "timestamp": "={{ $json.timestamp }}",
              "data": "={{ JSON.stringify($json.original_data) }}"
            }
          }
        },
        "id": "c3d4e5f6-g7h8-9i0j-1k2l-m3n4o5p6q7r8",
        "name": "Save to Database",
        "type": "n8n-nodes-base.postgres",
        "typeVersion": 2.4,
        "position": [
          640,
          200
        ]
      },
      {
        "parameters": {
          "authentication": "oAuth2",
          "select": "channel",
          "channelId": {
            "__rl": true,
            "value": "C9876543210",
            "mode": "id"
          },
          "text": "ðŸ“Š New Event Processed\n\nCustomer: {{ $('Process Data').item.json.customer_id }}\nEvent: {{ $('Process Data').item.json.event_type }}\nTime: {{ $('Process Data').item.json.timestamp }}",
          "otherOptions": {}
        },
        "id": "d4e5f6g7-h8i9-0j1k-2l3m-n4o5p6q7r8s9",
        "name": "Notify Team",
        "type": "n8n-nodes-base.slack",
        "typeVersion": 2.1,
        "position": [
          640,
          400
        ]
      }
    ],
    "connections": {
      "Webhook": {
        "main": [
          [
            {
              "node": "Process Data",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Process Data": {
        "main": [
          [
            {
              "node": "Save to Database",
              "type": "main",
              "index": 0
            },
            {
              "node": "Notify Team",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    }
  }
}
